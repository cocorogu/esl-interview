[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Coco\AppData\Local\Temp\idea2225.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Coco\AppData\Local\Temp\idea2225.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (AdoptOpenJDK Java 1.8.0_272)
[debug]       Load.loadUnit: plugins took 76.1046ms
[debug]       Load.loadUnit: defsScala took 0.2874ms
[debug] [Loading] Scanning directory C:\Users\Coco\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Coco\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.4693 ms
[debug]           Load.resolveProject(global-plugins) took 54.9101ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Coco\.sbt\1.0\plugins, plugins: List(<none>))) took 98.5884ms
[debug] [Loading] Done in C:\Users\Coco\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 117.2927ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2205ms
[debug]     Load.loadUnit(file:/C:/Users/Coco/.sbt/1.0/plugins/, ...) took 200.8716ms
[debug]   Load.apply: load took 350.6774ms
[debug]   Load.apply: resolveProjects took 5.5826ms
[debug]   Load.apply: finalTransforms took 49.0728ms
[debug]   Load.apply: config.delegates took 6.2165ms
[debug]   Load.apply: Def.make(settings)... took 753.3069ms
[debug]   Load.apply: structureIndex took 95.1699ms
[debug]   Load.apply: mkStreams took 2.2823ms
[info] loading global plugins from C:\Users\Coco\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2577.503ms
[debug]           Load.loadUnit: plugins took 22.1423ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory I:\scala-workplace\esl-interview\project
[debug]             Load.loadUnit: mkEval took 7.9119ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in I:\scala-workplace\esl-interview\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2845 ms
[info] loading settings for project esl-interview-build from metals.sbt,idea2225.sbt ...
[debug]               Load.resolveProject(esl-interview-build) took 8.1636ms
[debug]             Load.loadTransitive: finalizeProject(Project(id esl-interview-build, base: I:\scala-workplace\esl-interview\project, plugins: List(<none>))) took 9.873ms
[debug] [Loading] Done in I:\scala-workplace\esl-interview\project, returning: (esl-interview-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 137.253ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.1614ms
[debug]         Load.loadUnit(file:/I:/scala-workplace/esl-interview/project/, ...) took 163.3334ms
[debug]       Load.apply: load took 164.3316ms
[debug]       Load.apply: resolveProjects took 0.0721ms
[debug]       Load.apply: finalTransforms took 7.3262ms
[debug]       Load.apply: config.delegates took 0.2823ms
[debug]       Load.apply: Def.make(settings)... took 70.8521ms
[debug]       Load.apply: structureIndex took 24.5ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from I:\scala-workplace\esl-interview\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 468.4933ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory I:\scala-workplace\esl-interview
[debug]       Load.loadUnit: mkEval took 0.1505ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in I:\scala-workplace\esl-interview, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(metals.MetalsPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(metals.MetalsPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,metals.MetalsPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8292 ms
[info] loading settings for project esl-interview from build.sbt ...
[debug]         Load.resolveProject(esl-interview) took 24.4402ms
[debug]       Load.loadTransitive: finalizeProject(Project(id esl-interview, base: I:\scala-workplace\esl-interview, plugins: List(<none>))) took 27.2209ms
[debug] [Loading] Done in I:\scala-workplace\esl-interview, returning: (esl-interview)
[debug]     Load.loadUnit: loadedProjectsRaw took 93.2321ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.1364ms
[debug]   Load.loadUnit(file:/I:/scala-workplace/esl-interview/, ...) took 564.3267ms
[debug] Load.apply: load took 565.4036ms
[debug] Load.apply: resolveProjects took 0.101ms
[debug] Load.apply: finalTransforms took 19.9728ms
[debug] Load.apply: config.delegates took 0.4148ms
[debug] Load.apply: Def.make(settings)... took 65.188ms
[debug] Load.apply: structureIndex took 19.5416ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to esl-interview (in build file:/I:/scala-workplace/esl-interview/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50114 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50114, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to esl-interview (in build file:/I:/scala-workplace/esl-interview/)
[debug] > Exec(idea-shell, None, None)
