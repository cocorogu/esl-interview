[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Coco\AppData\Local\Temp\idea6.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Coco\AppData\Local\Temp\idea6.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (AdoptOpenJDK Java 1.8.0_272)
[debug]       Load.loadUnit: plugins took 93.7808ms
[debug]       Load.loadUnit: defsScala took 0.2879ms
[debug] [Loading] Scanning directory C:\Users\Coco\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Coco\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.7725 ms
[debug]           Load.resolveProject(global-plugins) took 46.2685ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Coco\.sbt\1.0\plugins, plugins: List(<none>))) took 106.8589ms
[debug] [Loading] Done in C:\Users\Coco\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 124.4634ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2193ms
[debug]     Load.loadUnit(file:/C:/Users/Coco/.sbt/1.0/plugins/, ...) took 225.2018ms
[debug]   Load.apply: load took 373.458ms
[debug]   Load.apply: resolveProjects took 5.5033ms
[debug]   Load.apply: finalTransforms took 55.5788ms
[debug]   Load.apply: config.delegates took 8.1585ms
[debug]   Load.apply: Def.make(settings)... took 735.8746ms
[debug]   Load.apply: structureIndex took 92.1376ms
[debug]   Load.apply: mkStreams took 1.6549ms
[info] loading global plugins from C:\Users\Coco\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2660.3623ms
[debug]           Load.loadUnit: plugins took 24.0221ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory I:\scala-workplace\esl-interview\project
[debug]             Load.loadUnit: mkEval took 6.4119ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in I:\scala-workplace\esl-interview\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5424 ms
[info] loading settings for project esl-interview-build from metals.sbt,idea6.sbt ...
[debug]               Load.resolveProject(esl-interview-build) took 9.0498ms
[debug]             Load.loadTransitive: finalizeProject(Project(id esl-interview-build, base: I:\scala-workplace\esl-interview\project, plugins: List(<none>))) took 11.0531ms
[debug] [Loading] Done in I:\scala-workplace\esl-interview\project, returning: (esl-interview-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 137.6164ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.3722ms
[debug]         Load.loadUnit(file:/I:/scala-workplace/esl-interview/project/, ...) took 165.7984ms
[debug]       Load.apply: load took 166.8072ms
[debug]       Load.apply: resolveProjects took 0.0735ms
[debug]       Load.apply: finalTransforms took 8.4122ms
[debug]       Load.apply: config.delegates took 0.2803ms
[debug]       Load.apply: Def.make(settings)... took 93.4199ms
[debug]       Load.apply: structureIndex took 28.5143ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from I:\scala-workplace\esl-interview\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 509.7769ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory I:\scala-workplace\esl-interview
[debug]       Load.loadUnit: mkEval took 0.2151ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in I:\scala-workplace\esl-interview, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(metals.MetalsPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(metals.MetalsPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,metals.MetalsPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3479 ms
[info] loading settings for project esl-interview from build.sbt ...
[debug]         Load.resolveProject(esl-interview) took 30.1345ms
[debug]       Load.loadTransitive: finalizeProject(Project(id esl-interview, base: I:\scala-workplace\esl-interview, plugins: List(<none>))) took 33.4968ms
[debug] [Loading] Done in I:\scala-workplace\esl-interview, returning: (esl-interview)
[debug]     Load.loadUnit: loadedProjectsRaw took 98.6829ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.0453ms
[debug]   Load.loadUnit(file:/I:/scala-workplace/esl-interview/, ...) took 611.0816ms
[debug] Load.apply: load took 612.1296ms
[debug] Load.apply: resolveProjects took 0.1243ms
[debug] Load.apply: finalTransforms took 18.5822ms
[debug] Load.apply: config.delegates took 0.3053ms
[debug] Load.apply: Def.make(settings)... took 76.2677ms
[debug] Load.apply: structureIndex took 21.1931ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to esl-interview (in build file:/I:/scala-workplace/esl-interview/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53445 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53445, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to esl-interview (in build file:/I:/scala-workplace/esl-interview/)
[debug] > Exec(idea-shell, None, None)
